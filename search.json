[{"path":"https://dzulfiqarfr.github.io/bpsr/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2022 bpsr authors Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://dzulfiqarfr.github.io/bpsr/articles/bpsr.html","id":"set-api-key","dir":"Articles","previous_headings":"","what":"Set API key","title":"bpsr","text":"API requires users identify using key. provide key bpsr, store environment variable called BPSR_KEY. package provides helper function set key. keep repeating step working projects future, store key .Renviron. can easily help usethis::edit_r_environ().","code":"bps_set_key()"},{"path":"https://dzulfiqarfr.github.io/bpsr/articles/bpsr.html","id":"get-dataset","dir":"Articles","previous_headings":"","what":"Get dataset","title":"bpsr","text":"API provides two types datasets, calls static table1 dynamic table2. datasets dynamic tables, ’ll focus . Suppose ’re interested datasets related Human Development Index (HDI), measures material nonmaterial well-. request dataset, need know identifier (ID). API provides dataset table contains dataset’s ID title, among things. can use bps_dataset() request table. However, may want filter dataset table subject. Requesting complete table can take seconds, requesting filtered table may take less second. November 2022, dataset table 1,411 records. datasets divided 50 subjects. narrow dataset table subject, ’ll need ID HDI subject. ’ll start requesting subject table using bps_subject(). Next, ’ll request table datasets related HDI. ’ll supplying HDI subject ID bps_dataset(). Now, can finally request HDI datasets using bps_get_dataset(). Let’s start headline index. bps_get_dataset() returns tibble bpsr_tbl subclass. metadata attribute, can access using bps_metadata(). dataset vertical_var derived_var columns, categorical variables. generic names follow API’s semantics. , vertical_var represents region variable derived_var represents variables. dataset also var column, continuous variable. name doesn’t follow API’s semantics. var measured variable. , represents HDI. can see , BPS doesn’t provide metadata variable values index points. far, covered one common tasks. steps took similar ones take use agency’s website. start navigating particular subject tab, browse list datasets finally download dataset. Unlike using website, didn’t download multiple files get complete headline HDI dataset. website splits dataset different files every two year observations.","code":"# Set `page = Inf` to request the complete subject table table_subject <- bps_subject(page = Inf, lang = \"eng\")  table_subject_hdi <- dplyr::filter(   table_subject,    title == \"Human Development Indices\" )  table_subject_hdi #> # A tibble: 1 × 5 #>   subject_id title                     subject_category_id subject_cate…¹ ntabel #>   <chr>      <chr>                     <chr>               <chr>          <lgl>  #> 1 26         Human Development Indices 1                   Social and Po… NA     #> # … with abbreviated variable name ¹​subject_category table_data_hdi <- bps_dataset(   subject_id = table_subject_hdi$subject_id,    page = Inf,   lang = \"eng\" )  table_data_hdi #> # A tibble: 15 × 9 #>    dataset_id title              subje…¹ subject def   notes verti…² unit  graph #>    <chr>      <chr>              <chr>   <chr>   <chr> <chr> <chr>   <chr> <int> #>  1 3          Life Expectancy R… 26      Human … NA    NA    2       Year      3 #>  2 4          Literacy Rate      26      Human … NA    NA    2       Perc…     3 #>  3 5          Mean Years School… 26      Human … NA    NA    2       Year      3 #>  4 6          Adjusted per Capi… 26      Human … NA    NA    2       Thou…     3 #>  5 7          Human Development… 26      Human … NA    NA    2       NA        3 #>  6 202        Human Development… 26      Human … NA    Seri… 1       NA        1 #>  7 293        Human Development… 26      Human … NA    &lt;… 112     NA        1 #>  8 413        [New Method] Huma… 26      Human … NA    &lt;… 431     NA        1 #>  9 414        [New Method] Umur… 26      Human … NA    &lt;… 431     Year      1 #> 10 415        [New Method] Mean… 26      Human … NA    &lt;… 431     Year      1 #> 11 416        [New Method] Adju… 26      Human … NA    &lt;… 431     Thou…     1 #> 12 417        [New Method] Expe… 26      Human … NA    &lt;… 431     Year      1 #> 13 418        [New Method] Rank… 26      Human … NA    NA    2       NA        1 #> 14 494        [New Method] Huma… 26      Human … NA    &lt;… 1       NA        1 #> 15 1505       [New Method] Chan… 26      Human … NA    &lt;… 2       NA        1 #> # … with abbreviated variable names ¹​subject_id, ²​vertical_var_group_id table_data_hdi_hl <- dplyr::filter(   table_data_hdi,    title == \"[New Method] Human Development Index\" )  hdi_headline <- bps_get_dataset(table_data_hdi_hl$dataset_id, lang = \"eng\") hdi_headline #> # A tibble: 7,067 × 5 #>    vertical_var derived_var  year period   var #>    <chr>        <chr>       <int> <chr>  <dbl> #>  1 ACEH         NA           2010 Annual  67.1 #>  2 ACEH         NA           2011 Annual  67.4 #>  3 ACEH         NA           2012 Annual  67.8 #>  4 ACEH         NA           2013 Annual  68.3 #>  5 ACEH         NA           2014 Annual  68.8 #>  6 ACEH         NA           2015 Annual  69.4 #>  7 ACEH         NA           2016 Annual  70   #>  8 ACEH         NA           2017 Annual  70.6 #>  9 ACEH         NA           2018 Annual  71.2 #> 10 ACEH         NA           2019 Annual  71.9 #> # … with 7,057 more rows #> # ℹ Read the metadata with `bps_metadata()` bps_metadata(hdi_headline) #> <bpsr_metadata> #> List of 10 #>  $ dataset_id  : chr \"413\" #>  $ dataset     : chr \"[New Method] Human Development Index\" #>  $ vertical_var: chr \"Province/Regency/City\" #>  $ subject     : chr \"Human Development Indices\" #>  $ methodology : NULL #>  $ activity    : NULL #>  $ note        : chr \"&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;For further explanation regarding the new HDI method, please click the \"| __truncated__ #>  $ def         : chr \"\" #>  $ decimal     : chr \"2\" #>  $ var         : chr \"\""},{"path":"https://dzulfiqarfr.github.io/bpsr/articles/bpsr.html","id":"get-multiple-datasets","dir":"Articles","previous_headings":"","what":"Get multiple datasets","title":"bpsr","text":"bpsr also provides function request multiple datasets , namely bps_get_datasets(). ’ll use HDI datasets demonstrate function. HDI builds three dimensions: health, knowledge standard living. ’ll focus knowledge dimension, constructed using two indicators: expected years schooling mean years schooling. Let’s request datasets two indicators supplying vector IDs bps_get_datasets(). bps_get_datasets() returns named list bpsr_multiple_datasets class, contains bpsr_tbls. call gave us list contains expected years schooling mean years schooling datasets3 can subset ID.","code":"table_data_hdi_edu <- dplyr::filter(   table_data_hdi,   title %in% c(     \"[New Method] Mean Years of Schooling\",     \"[New Method] Expected Years of Schooling\"   ) )  hdi_edu <- bps_get_datasets(table_data_hdi_edu$dataset_id, lang = \"eng\") hdi_edu #> <bpsr_multiple_datasets> #> List of 2 #>  $ 415: bpsr_tbl [7,067 × 5] (S3: bpsr_tbl/tbl_df/tbl/data.frame) #>   ..$ vertical_var: chr [1:7067] \"ACEH\" ... #>   ..$ derived_var : chr [1:7067] NA ... #>   ..$ year        : int [1:7067] 2010 2011 ... #>   ..$ period      : chr [1:7067] \"Annual\" ... #>   ..$ var         : num [1:7067] 8.28 8.32 ... #>  $ 417: bpsr_tbl [7,077 × 5] (S3: bpsr_tbl/tbl_df/tbl/data.frame) #>   ..$ vertical_var: chr [1:7077] \"ACEH\" ... #>   ..$ derived_var : chr [1:7077] NA ... #>   ..$ year        : int [1:7077] 2010 2011 ... #>   ..$ period      : chr [1:7077] \"Annual\" ... #>   ..$ var         : num [1:7077] 12.9 ..."},{"path":"https://dzulfiqarfr.github.io/bpsr/articles/bpsr.html","id":"request-other-resources","dir":"Articles","previous_headings":"","what":"Request other resources","title":"bpsr","text":"scope bpsr extends beyond common task getting dataset, package doesn’t provide wrapper functions endpoints. reason, package makes core low-level functions available users. can use functions request resources, publications infographics. See Reference page website details.","code":""},{"path":"https://dzulfiqarfr.github.io/bpsr/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Dzulfiqar Fathur Rahman. Author, maintainer.","code":""},{"path":"https://dzulfiqarfr.github.io/bpsr/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Fathur Rahman D (2022). bpsr: Get Resources 'Statistics Indonesia (BPS)' API. https://dzulfiqarfr.github.io/bpsr/, https://github.com/dzulfiqarfr/bpsr.","code":"@Manual{,   title = {bpsr: Get Resources from 'Statistics Indonesia (BPS)' API},   author = {Dzulfiqar {Fathur Rahman}},   year = {2022},   note = {https://dzulfiqarfr.github.io/bpsr/, https://github.com/dzulfiqarfr/bpsr}, }"},{"path":"https://dzulfiqarfr.github.io/bpsr/index.html","id":"bpsr","dir":"","previous_headings":"","what":"Get Resources from Statistics Indonesia (BPS) API","title":"Get Resources from Statistics Indonesia (BPS) API","text":"bpsr allows users get resources like datasets Statistics Indonesia (BPS) R wrapping application programming interface (API).","code":""},{"path":"https://dzulfiqarfr.github.io/bpsr/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Get Resources from Statistics Indonesia (BPS) API","text":"can install development version bpsr like :","code":"# install.packages(\"devtools\") devtools::install_github(\"dzulfiqarfr/bpsr\")"},{"path":"https://dzulfiqarfr.github.io/bpsr/index.html","id":"usage","dir":"","previous_headings":"","what":"Usage","title":"Get Resources from Statistics Indonesia (BPS) API","text":"need register BPS API’s website first able use bpsr. functions bpsr bps_ prefix, can benefit automatic code completion. functions get resources take string resource identifier (ID) first argument. typically need look first table resource interest. Functions get tables noun-y name. example, use bps_dataset() request dataset table. Functions request datasets bps_get_ prefix. Use bps_get_dataset() request dataset. hood, bpsr parses JSON returned API tibble. importantly, package arranges dataset tidy structure, well suited analysis. Use bps_get_trade_hs_*() request trade datasets. trade functions take Harmonized System (HS) chapter code first argument. look HS chapter code, use bps_hs_code(). resources available download. can use download functions get resources. especially useful get dataset stored spreadsheet, comes Microsoft Excel file format “.xls” extension. Aside common usage, bpsr also provides features, including: requesting multiple datasets using bps_get_datasets(); downloading multiple resources using bps_download(). Learn Getting Started vignette (vignette(\"bpsr\")).","code":"library(bpsr) table <- bps_dataset(lang = \"eng\") table #> # A tibble: 10 × 9 #>    dataset_id title              subje…¹ subject def   notes verti…² unit  graph #>    <chr>      <chr>              <chr>   <chr>   <chr> <chr> <chr>   <lgl> <int> #>  1 70         Population 5 Year… 2       Commun… <NA>  &lt;… 1       NA        1 #>  2 111        Percentage Househ… 2       Commun… <NA>  Sour… 1       NA        1 #>  3 391        Percentage of Hou… 2       Commun… <NA>  Sour… 1       NA        1 #>  4 392        Active Mobile Pho… 2       Commun… <NA>  Sour… 1       NA        1 #>  5 393        Percentage of Hou… 2       Commun… <NA>  Sour… 1       NA        1 #>  6 395        Percentage of Pop… 2       Commun… <NA>  Sumb… 1       NA        1 #>  7 396        Percentage of Hou… 2       Commun… <NA>  &lt;… 1       NA        1 #>  8 398        Percentage of Hou… 2       Commun… <NA>  &lt;… 1       NA        1 #>  9 402        Percentage Househ… 2       Commun… <NA>  Sour… 152     NA        1 #> 10 403        Household Members… 2       Commun… <NA>  Sour… 1       NA        1 #> # … with abbreviated variable names ¹​subject_id, ²​vertical_var_group_id data <- bps_get_dataset(table$dataset_id[[1]], lang = \"eng\") data #> # A tibble: 558 × 5 #>    vertical_var derived_var  year period   var #>    <chr>        <chr>       <int> <chr>  <dbl> #>  1 INDONESIA    Male         2014 Annual  18.8 #>  2 INDONESIA    Male         2015 Annual  23.7 #>  3 INDONESIA    Male         2016 Annual  27.2 #>  4 INDONESIA    Male         2017 Annual  34.5 #>  5 INDONESIA    Male         2018 Annual  42.3 #>  6 INDONESIA    Male         2019 Annual  50.5 #>  7 INDONESIA    Male         2020 Annual  56.6 #>  8 INDONESIA    Male         2021 Annual  65.0 #>  9 INDONESIA    Female       2014 Annual  15.4 #> 10 INDONESIA    Female       2015 Annual  20.2 #> # … with 548 more rows #> # ℹ Read the metadata with `bps_metadata()` hs <- bps_hs_code()  export <- bps_get_trade_hs_chapter(   hs$hs_chapter[[1]],   \"export\",    year = 2021,   freq = \"annual\" )  export #> # A tibble: 67 × 7 #>    hs_chapter description    port                   partner  year net_w…¹ export #>    <chr>      <chr>          <chr>                  <chr>   <int>   <dbl>  <dbl> #>  1 01         Binatang hidup ATAPUPU                EAST T…  2021  1.50e4 1.98e5 #>  2 01         Binatang hidup KUALA NAMU INTERNATIO… JAPAN    2021  5   e0 1.03e2 #>  3 01         Binatang hidup KUALA NAMU INTERNATIO… SINGAP…  2021  1.50e4 1.77e4 #>  4 01         Binatang hidup KUALA TANJUNG          MALAYS…  2021  2.36e4 6.51e4 #>  5 01         Binatang hidup NGURAH RAI (U)         EAST T…  2021  1.93e3 1.12e4 #>  6 01         Binatang hidup NGURAH RAI (U)         HONG K…  2021  2.4 e2 2.05e4 #>  7 01         Binatang hidup SEKUPANG               SINGAP…  2021  2.52e7 5.59e7 #>  8 01         Binatang hidup SOEKARNO-HATTA (U)     AFGHAN…  2021  1.28e2 5.5 e4 #>  9 01         Binatang hidup SOEKARNO-HATTA (U)     AUSTRIA  2021  6   e1 2.07e2 #> 10 01         Binatang hidup SOEKARNO-HATTA (U)     BAHRAIN  2021  1.27e2 8.40e3 #> # … with 57 more rows, and abbreviated variable name ¹​net_weight #> # ℹ Read the metadata with `bps_metadata()` spreadsheet <- bps_dataset_spreadsheet(lang = \"eng\") bps_download_spreadsheet(spreadsheet$dataset_id[[1]], \"spreadsheet.xls\")"},{"path":"https://dzulfiqarfr.github.io/bpsr/reference/bps_add_date.html","id":null,"dir":"Reference","previous_headings":"","what":"Create date column in dataset — bps_add_date","title":"Create date column in dataset — bps_add_date","text":"Adds date variable BPS dataset, based years period IDs numeric representations months. values floor date given period. format year-month-date (ymd).","code":""},{"path":"https://dzulfiqarfr.github.io/bpsr/reference/bps_add_date.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create date column in dataset — bps_add_date","text":"","code":"bps_add_date(data)"},{"path":"https://dzulfiqarfr.github.io/bpsr/reference/bps_add_date.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create date column in dataset — bps_add_date","text":"data tibble bpsr_tbl subclass.","code":""},{"path":"https://dzulfiqarfr.github.io/bpsr/reference/bps_add_date.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create date column in dataset — bps_add_date","text":"tibble date column.","code":""},{"path":[]},{"path":"https://dzulfiqarfr.github.io/bpsr/reference/bps_add_date.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create date column in dataset — bps_add_date","text":"","code":"data <- bps_get_trade_hs_chapter(\"01\", \"export\", year = 2021) bps_add_date(data) #> # A tibble: 338 × 9 #>    hs_chapter description    port  partner  year month date       net_w…¹ export #>    <chr>      <chr>          <chr> <chr>   <int> <int> <date>       <dbl>  <dbl> #>  1 01         Binatang hidup ATAP… EAST T…  2021     2 2021-02-01   3494. 45808  #>  2 01         Binatang hidup ATAP… EAST T…  2021     4 2021-04-01   1524. 19790  #>  3 01         Binatang hidup ATAP… EAST T…  2021     5 2021-05-01   1974. 25465  #>  4 01         Binatang hidup ATAP… EAST T…  2021     6 2021-06-01    923. 11825  #>  5 01         Binatang hidup ATAP… EAST T…  2021     7 2021-07-01    536.  6930  #>  6 01         Binatang hidup ATAP… EAST T…  2021     8 2021-08-01    553.  6890  #>  7 01         Binatang hidup ATAP… EAST T…  2021     9 2021-09-01   2514. 31955  #>  8 01         Binatang hidup ATAP… EAST T…  2021    11 2021-11-01   2852. 38133  #>  9 01         Binatang hidup ATAP… EAST T…  2021    12 2021-12-01    667. 11350  #> 10 01         Binatang hidup KUAL… JAPAN    2021     4 2021-04-01      5    103. #> # … with 328 more rows, and abbreviated variable name ¹​net_weight #> # ℹ Read the metadata with `bps_metadata()`"},{"path":"https://dzulfiqarfr.github.io/bpsr/reference/bps_dataset.html","id":null,"dir":"Reference","previous_headings":"","what":"Look up and request dataset — bps_dataset","title":"Look up and request dataset — bps_dataset","text":"Search get datasets BPS distributes JSONs. API calls dynamic tables. bps_dataset() requests dataset table. table contains dataset IDs, needed request datasets bps_get_dataset() requests dataset bps_get_datasets() requests multiple datasets","code":""},{"path":"https://dzulfiqarfr.github.io/bpsr/reference/bps_dataset.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Look up and request dataset — bps_dataset","text":"","code":"bps_dataset(   subject_id = NULL,   vertical_var_group_id = NULL,   domain_id = \"0000\",   page = NULL,   lang = c(\"ind\", \"eng\") )  bps_get_dataset(   dataset_id,   vertical_var_id = NULL,   derived_var_id = NULL,   year_id = NULL,   period_id = NULL,   domain_id = \"0000\",   lang = c(\"ind\", \"eng\"),   keep = \"none\" )  bps_get_datasets(   dataset_id,   domain_id = \"0000\",   lang = c(\"ind\", \"eng\"),   keep = \"none\" )"},{"path":"https://dzulfiqarfr.github.io/bpsr/reference/bps_dataset.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Look up and request dataset — bps_dataset","text":"subject_id subject ID. Use bps_subject() see list subject IDs. vertical_var_group_id vertical variable group ID. Use bps_vertical_var() see list vertical variable group IDs. domain_id domain ID BPS bureau. Defaults \"0000\", domain ID central bureau. Use bps_domain() see list domain IDs. page page number result. Defaults page one. Set Inf request pages. lang result's language. Must either \"ind\" Indonesian \"eng\" English. Defaults Indonesian. dataset_id dataset ID. request multiple datasets, supply vector IDs bps_get_datasets(). Use bps_dataset() see list dataset IDs. vertical_var_id vertical variable ID. Use bps_vertical_var() see list vertical variable IDs. derived_var_id derived variable ID. Use bps_derived_var() see list derived variable IDs. year_id year ID. Use bps_year() see list year IDs. period_id period ID. Use bps_period() see list period IDs. keep ID columns keep. Defaults \"none\", drops . Set \"\" keep ID columns. Otherwise, must \"vertical_var_id\", \"derived_var_id\", \"year_id\" \"period_id\". keep multiple ID columns, supply vector .","code":""},{"path":"https://dzulfiqarfr.github.io/bpsr/reference/bps_dataset.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Look up and request dataset — bps_dataset","text":"bps_dataset() returns tibble containing dataset IDs titles. bps_get_dataset() returns tibble bpsr_tbl subclass, metadata attribute. Use bps_metadata() read . bps_get_datasets() returns list bpsr_multiple_tbl class, contains tibbles bpsr_tbl subclass.","code":""},{"path":"https://dzulfiqarfr.github.io/bpsr/reference/bps_dataset.html","id":"request-filter","dir":"Reference","previous_headings":"","what":"Request filter","title":"Look up and request dataset — bps_dataset","text":"Filter request multiple values vertical_var_id, derived_var_id, year_id period_id supplying vector IDs, bps_get_dataset(). example, vertical_var_id = c(\"1100\", \"1200\"). year_id period_id, filter range values concatenating start end range using colon, e.g. year_id = \"118:121\" observations 2018 2021.","code":""},{"path":"https://dzulfiqarfr.github.io/bpsr/reference/bps_dataset.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Look up and request dataset — bps_dataset","text":"","code":"# Get the dataset on consumer price index of food category bps_get_dataset(\"1905\", lang = \"eng\") #> # A tibble: 13,405 × 5 #>    vertical_var  derived_var                   year period      var #>    <chr>         <chr>                        <int> <chr>     <dbl> #>  1 KOTA MEULABOH Foods, Beverages and Tobacco  2020 January    112. #>  2 KOTA MEULABOH Foods, Beverages and Tobacco  2020 February   111. #>  3 KOTA MEULABOH Foods, Beverages and Tobacco  2020 March      112. #>  4 KOTA MEULABOH Foods, Beverages and Tobacco  2020 April      111. #>  5 KOTA MEULABOH Foods, Beverages and Tobacco  2020 May        113. #>  6 KOTA MEULABOH Foods, Beverages and Tobacco  2020 June       112. #>  7 KOTA MEULABOH Foods, Beverages and Tobacco  2020 July       111. #>  8 KOTA MEULABOH Foods, Beverages and Tobacco  2020 August     113. #>  9 KOTA MEULABOH Foods, Beverages and Tobacco  2020 September  113. #> 10 KOTA MEULABOH Foods, Beverages and Tobacco  2020 October    114. #> # … with 13,395 more rows #> # ℹ Read the metadata with `bps_metadata()`  # Get some Human Development Index datasets bps_get_datasets(c(\"414\", \"415\", \"416\", \"417\"), lang = \"eng\") #> <bpsr_multiple_datasets> #> List of 4 #>  $ 414: bpsr_tbl [7,125 × 5] (S3: bpsr_tbl/tbl_df/tbl/data.frame) #>   ..$ vertical_var: chr [1:7125] \"ACEH\" ... #>   ..$ derived_var : chr [1:7125] NA ... #>   ..$ year        : int [1:7125] 2010 2011 ... #>   ..$ period      : chr [1:7125] \"Annual\" ... #>   ..$ var         : num [1:7125] 69.1 ... #>  $ 415: bpsr_tbl [7,067 × 5] (S3: bpsr_tbl/tbl_df/tbl/data.frame) #>   ..$ vertical_var: chr [1:7067] \"ACEH\" ... #>   ..$ derived_var : chr [1:7067] NA ... #>   ..$ year        : int [1:7067] 2010 2011 ... #>   ..$ period      : chr [1:7067] \"Annual\" ... #>   ..$ var         : num [1:7067] 8.28 8.32 ... #>  $ 416: bpsr_tbl [7,067 × 5] (S3: bpsr_tbl/tbl_df/tbl/data.frame) #>   ..$ vertical_var: chr [1:7067] \"ACEH\" ... #>   ..$ derived_var : chr [1:7067] NA ... #>   ..$ year        : int [1:7067] 2010 2011 ... #>   ..$ period      : chr [1:7067] \"Annual\" ... #>   ..$ var         : int [1:7067] 7934 8044 ... #>  $ 417: bpsr_tbl [7,077 × 5] (S3: bpsr_tbl/tbl_df/tbl/data.frame) #>   ..$ vertical_var: chr [1:7077] \"ACEH\" ... #>   ..$ derived_var : chr [1:7077] NA ... #>   ..$ year        : int [1:7077] 2010 2011 ... #>   ..$ period      : chr [1:7077] \"Annual\" ... #>   ..$ var         : num [1:7077] 12.9 ..."},{"path":"https://dzulfiqarfr.github.io/bpsr/reference/bps_dataset_spreadsheet.html","id":null,"dir":"Reference","previous_headings":"","what":"Look up and request spreadsheet dataset — bps_dataset_spreadsheet","title":"Look up and request spreadsheet dataset — bps_dataset_spreadsheet","text":"Search download datasets BPS distributes spreadsheets. API calls static tables. bps_dataset_spreadsheet() requests spreadsheet dataset table bps_download_spreadsheet() downloads spreadsheet","code":""},{"path":"https://dzulfiqarfr.github.io/bpsr/reference/bps_dataset_spreadsheet.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Look up and request spreadsheet dataset — bps_dataset_spreadsheet","text":"","code":"bps_dataset_spreadsheet(   keyword = NULL,   month = NULL,   year = NULL,   domain_id = \"0000\",   page = NULL,   lang = c(\"ind\", \"eng\") )  bps_download_spreadsheet(   dataset_id,   file_path,   domain_id = \"0000\",   lang = c(\"ind\", \"eng\") )"},{"path":"https://dzulfiqarfr.github.io/bpsr/reference/bps_dataset_spreadsheet.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Look up and request spreadsheet dataset — bps_dataset_spreadsheet","text":"keyword keyword filter search result. month month spreadsheet last updated. year year spreadsheet last updated. domain_id domain ID BPS bureau. Defaults \"0000\", domain ID central bureau. Use bps_domain() see list domain IDs. page page number result. Defaults page one. Set Inf request pages. lang result's language. Must either \"ind\" Indonesian \"eng\" English. Defaults Indonesian. dataset_id dataset ID. Use bps_dataset_spreadsheet() see list dataset IDs. file_path path save spreadsheet. Must \".xls\" extension.","code":""},{"path":"https://dzulfiqarfr.github.io/bpsr/reference/bps_dataset_spreadsheet.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Look up and request spreadsheet dataset — bps_dataset_spreadsheet","text":"bps_dataset_spreadsheet() returns tibble containing dataset IDs titles, well related details. bps_download_spreadsheet() invisibly returns string file path.","code":""},{"path":"https://dzulfiqarfr.github.io/bpsr/reference/bps_dataset_spreadsheet.html","id":"file-format","dir":"Reference","previous_headings":"","what":"File format","title":"Look up and request spreadsheet dataset — bps_dataset_spreadsheet","text":"spreadsheet dataset comes Microsoft Excel file format \".xls\" extension.","code":""},{"path":[]},{"path":"https://dzulfiqarfr.github.io/bpsr/reference/bps_dataset_spreadsheet.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Look up and request spreadsheet dataset — bps_dataset_spreadsheet","text":"","code":"# Search spreadsheet datasets on unemployment spreadsheet <- bps_dataset_spreadsheet(   keyword = \"unemployment\",   lang = \"eng\" )  if (FALSE) { bps_download_spreadsheet(spreadsheet$dataset_id[[1]], \"spreadsheet.xls\") }"},{"path":"https://dzulfiqarfr.github.io/bpsr/reference/bps_domain.html","id":null,"dir":"Reference","previous_headings":"","what":"Look up domain of BPS bureau — bps_domain","title":"Look up domain of BPS bureau — bps_domain","text":"Request table domains BPS bureaus city regency level, province level levels.","code":""},{"path":"https://dzulfiqarfr.github.io/bpsr/reference/bps_domain.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Look up domain of BPS bureau — bps_domain","text":"","code":"bps_domain(level = c(\"all\", \"province\", \"city\"))"},{"path":"https://dzulfiqarfr.github.io/bpsr/reference/bps_domain.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Look up domain of BPS bureau — bps_domain","text":"level level BPS bureaus. Must either \"\", \"province\" \"city\". Defaults \"\".","code":""},{"path":"https://dzulfiqarfr.github.io/bpsr/reference/bps_domain.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Look up domain of BPS bureau — bps_domain","text":"tibble containing domain IDs, names URLs every BPS bureau given level.","code":""},{"path":"https://dzulfiqarfr.github.io/bpsr/reference/bps_domain.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Look up domain of BPS bureau — bps_domain","text":"","code":"# See the list of domains of BPS bureaus at the province level bps_domain(level = \"province\") #> # A tibble: 34 × 3 #>    domain_id domain_name          domain_url                 #>    <chr>     <chr>                <chr>                      #>  1 1100      Aceh                 https://aceh.bps.go.id     #>  2 1200      Sumatera Utara       https://sumut.bps.go.id    #>  3 1300      Sumatera Barat       https://sumbar.bps.go.id   #>  4 1400      Riau                 https://riau.bps.go.id     #>  5 1500      Jambi                https://jambi.bps.go.id    #>  6 1600      Sumatera Selatan     https://sumsel.bps.go.id   #>  7 1700      Bengkulu             https://bengkulu.bps.go.id #>  8 1800      Lampung              https://lampung.bps.go.id  #>  9 1900      Kep. Bangka Belitung https://babel.bps.go.id    #> 10 2100      Kep. Riau            https://kepri.bps.go.id    #> # … with 24 more rows"},{"path":"https://dzulfiqarfr.github.io/bpsr/reference/bps_download.html","id":null,"dir":"Reference","previous_headings":"","what":"Save resource from BPS API — bps_download","title":"Save resource from BPS API — bps_download","text":"Download resources BPS API, spreadsheet datasets, publications, press releases infographics.","code":""},{"path":"https://dzulfiqarfr.github.io/bpsr/reference/bps_download.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Save resource from BPS API — bps_download","text":"","code":"bps_download(url, file_path)"},{"path":"https://dzulfiqarfr.github.io/bpsr/reference/bps_download.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Save resource from BPS API — bps_download","text":"url BPS API download URL. Supply vector URLs download multiple resources. file_path path save resource. Must \".xls\", \".pdf\" \".png\" extension. Supply vector length url save multiple resources.","code":""},{"path":"https://dzulfiqarfr.github.io/bpsr/reference/bps_download.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Save resource from BPS API — bps_download","text":"character vector file_path.","code":""},{"path":[]},{"path":"https://dzulfiqarfr.github.io/bpsr/reference/bps_download.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Save resource from BPS API — bps_download","text":"","code":"# Download an infographic infographics <- bps_search(\"infographic\")  if (FALSE) { bps_download(infographics$file_url[[1]], \"infographics.png\") }"},{"path":"https://dzulfiqarfr.github.io/bpsr/reference/bps_get_trade_hs_chapter.html","id":null,"dir":"Reference","previous_headings":"","what":"Request trade data — bps_get_trade_hs_chapter","title":"Request trade data — bps_get_trade_hs_chapter","text":"Get data export import Indonesia. bps_hs_code() retrieves Harmonized System (HS) code table. table contains HS chapters codes, needed request trade data bps_get_trade_hs_chapter() requests export import data HS chapter first two digits HS code bps_get_trade_hs_full() requests export import data HS code bps_guess_latest_trade_year() gives estimated year recent data available","code":""},{"path":"https://dzulfiqarfr.github.io/bpsr/reference/bps_get_trade_hs_chapter.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Request trade data — bps_get_trade_hs_chapter","text":"","code":"bps_get_trade_hs_chapter(   hs_chapter,   flow,   year = bps_guess_latest_trade_year(),   freq = c(\"monthly\", \"annual\") )  bps_get_trade_hs_full(   hs_code,   flow,   year = bps_guess_latest_trade_year(),   freq = c(\"monthly\", \"annual\") )  bps_hs_code()  bps_guess_latest_trade_year()"},{"path":"https://dzulfiqarfr.github.io/bpsr/reference/bps_get_trade_hs_chapter.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Request trade data — bps_get_trade_hs_chapter","text":"hs_chapter, hs_code HS chapter code. request multiple chapters codes, supply vector . flow trade flow direction. Must either \"export\" \"import\". year year observation. Defaults bps_guess_latest_trade_year(), try guess year latest observations available. Set Inf request data across years. request multiple years, supply vector years. See Scope section details. freq frequency observation. Must either \"monthly\" \"annual\". Defaults \"monthly\".","code":""},{"path":"https://dzulfiqarfr.github.io/bpsr/reference/bps_get_trade_hs_chapter.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Request trade data — bps_get_trade_hs_chapter","text":"bps_hs_code() returns tibble containing HS chapters codes, well description. bps_get_trade_hs_chapter() bps_get_trade_hs_full() return tibble bpsr_tbl subclass, metadata attribtue. Use bps_metadata() read . bps_guess_latest_trade_year() returns integer.","code":""},{"path":"https://dzulfiqarfr.github.io/bpsr/reference/bps_get_trade_hs_chapter.html","id":"scope","dir":"Reference","previous_headings":"","what":"Scope","title":"Request trade data — bps_get_trade_hs_chapter","text":"API provides export import data far back 2014.","code":""},{"path":"https://dzulfiqarfr.github.io/bpsr/reference/bps_get_trade_hs_chapter.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Request trade data — bps_get_trade_hs_chapter","text":"","code":"# Request by the HS chapter bps_get_trade_hs_chapter(\"03\", \"export\", year = 2018) #> # A tibble: 3,844 × 8 #>    hs_chapter description               port  partner  year month net_w…¹ export #>    <chr>      <chr>                     <chr> <chr>   <int> <int>   <dbl>  <dbl> #>  1 03         Ikan dan krustasea, molu… ACHM… AUSTRA…  2018     9    2       5   #>  2 03         Ikan dan krustasea, molu… ACHM… AUSTRA…  2018    10    6.84   27.1 #>  3 03         Ikan dan krustasea, molu… ACHM… HONG K…  2018     1  100     130   #>  4 03         Ikan dan krustasea, molu… ACHM… HONG K…  2018     7   31      40   #>  5 03         Ikan dan krustasea, molu… ACHM… HONG K…  2018    12   10       5   #>  6 03         Ikan dan krustasea, molu… ACHM… JAPAN    2018     1    7.3    72.9 #>  7 03         Ikan dan krustasea, molu… ACHM… JAPAN    2018     2   14.6   119.  #>  8 03         Ikan dan krustasea, molu… ACHM… JAPAN    2018     3   18.6   163.  #>  9 03         Ikan dan krustasea, molu… ACHM… JAPAN    2018     4    8.20   43.7 #> 10 03         Ikan dan krustasea, molu… ACHM… JAPAN    2018     5  659    7452.  #> # … with 3,834 more rows, and abbreviated variable name ¹​net_weight #> # ℹ Read the metadata with `bps_metadata()`"},{"path":"https://dzulfiqarfr.github.io/bpsr/reference/bps_list.html","id":null,"dir":"Reference","previous_headings":"","what":"Perform request to list endpoint — bps_list","title":"Perform request to list endpoint — bps_list","text":"low-level function send one requests, depending page, list endpoint.","code":""},{"path":"https://dzulfiqarfr.github.io/bpsr/reference/bps_list.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Perform request to list endpoint — bps_list","text":"","code":"bps_list(model, ..., domain_id = \"0000\", page = NULL, lang = c(\"ind\", \"eng\"))"},{"path":"https://dzulfiqarfr.github.io/bpsr/reference/bps_list.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Perform request to list endpoint — bps_list","text":"model result model, e.g. \"publication\" request list publications. See Model section details. ... Name-value pairs provide query parameters. See httr2::req_url_query() details. domain_id domain ID BPS bureau. Defaults \"0000\", domain ID central bureau. Use bps_domain() see list domain IDs. page page number result. Defaults page one. Set Inf request pages. lang result's language. Must either \"ind\" Indonesian \"eng\" English. Defaults Indonesian.","code":""},{"path":"https://dzulfiqarfr.github.io/bpsr/reference/bps_list.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Perform request to list endpoint — bps_list","text":"list bpsr_table class.","code":""},{"path":"https://dzulfiqarfr.github.io/bpsr/reference/bps_list.html","id":"model","dir":"Reference","previous_headings":"","what":"Model","title":"Perform request to list endpoint — bps_list","text":"model must one following: \"subject\"; \"subcat\"; \"var\"; \"vervar\"; \"turvar\"; \"turth\"; \"th\"; \"unit\"; \"news\"; \"newscategory\"; \"pressrelease\"; \"publication\"; \"statictable\"; \"subcatcsa\"; \"subjectcsa\"; \"tablestatistic\"; \"indicators\"; \"infographic\"; \"glosarium\"; \"sdgs\"; \"kbli2009\"; \"kbli2015\"; \"kbli2017\"; \"kbli2020\"; \"kbki2015\". API actually also accepts \"data\" model, bpsr puts separate family functions due differences response structure. See bps_get_dataset() bps_get_datasets() details.","code":""},{"path":"https://dzulfiqarfr.github.io/bpsr/reference/bps_list.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Perform request to list endpoint — bps_list","text":"","code":"# Get a list of some publications bps_list(\"publication\", page = c(1, 2, 3), lang = \"eng\") #> ℹ Performing paginated request... #> ✔ Successfully requested 3 pages. [529ms] #>  #> <bpsr_table> #> Table: publication #> Content: #> List of 2 #>  $ table      :List of 3 #>   ..$ :'data.frame':\t10 obs. of  12 variables: #>   .. ..$ pub_id   : chr [1:10] \"fac1acc41ab7c4224bc09882\" ... #>   .. ..$ title    : chr [1:10] \"Anti Corruption Behavior Index 2022\" ... #>   .. ..$ kat_no   : chr [1:10] \"4407002\" ... #>   .. ..$ issn     : chr [1:10] \"2622-8017\" ... #>   .. ..$ pub_no   : chr [1:10] \"04300.2208\" ... #>   .. .. [list output truncated] #>   ..$ :'data.frame':\t10 obs. of  12 variables: #>   .. ..$ pub_id   : chr [1:10] \"70744a696d805364bdc1de8b\" ... #>   .. ..$ title    : chr [1:10] \"Economic Indicators September 2022\" ... #>   .. ..$ kat_no   : chr [1:10] \"9201001\" ... #>   .. ..$ issn     : chr [1:10] \"\" ... #>   .. ..$ pub_no   : chr [1:10] \"07300.2221\" ... #>   .. .. [list output truncated] #>   ..$ :'data.frame':\t10 obs. of  12 variables: #>   .. ..$ pub_id   : chr [1:10] \"0a09beac40484eaceb354a0b\" ... #>   .. ..$ title    : chr [1:10] \"Directory of Rubber Plantation Establishment\" ... #>   .. ..$ kat_no   : chr [1:10] \"1305075\" ... #>   .. ..$ issn     : chr [1:10] \"2338-6983\" ... #>   .. ..$ pub_no   : chr [1:10] \"05100.2214\" ... #>   .. .. [list output truncated] #>  $ result_info:List of 3 #>   ..$ :List of 5 #>   .. ..$ page    : int 1 #>   .. ..$ pages   : int 481 #>   .. ..$ per_page: int 10 #>   .. ..$ count   : int 10 #>   .. ..$ total   : int 4803 #>   ..$ :List of 5 #>   .. ..$ page    : int 2 #>   .. ..$ pages   : int 481 #>   .. ..$ per_page: int 10 #>   .. ..$ count   : int 10 #>   .. ..$ total   : int 4803 #>   ..$ :List of 5 #>   .. ..$ page    : int 3 #>   .. ..$ pages   : int 481 #>   .. ..$ per_page: int 10 #>   .. ..$ count   : int 10 #>   .. ..$ total   : int 4803"},{"path":"https://dzulfiqarfr.github.io/bpsr/reference/bps_metadata.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract dataset metadata — bps_metadata","title":"Extract dataset metadata — bps_metadata","text":"Read metadata BPS dataset.","code":""},{"path":"https://dzulfiqarfr.github.io/bpsr/reference/bps_metadata.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract dataset metadata — bps_metadata","text":"","code":"bps_metadata(data)"},{"path":"https://dzulfiqarfr.github.io/bpsr/reference/bps_metadata.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract dataset metadata — bps_metadata","text":"data tibble bpsr_tbl subclass.","code":""},{"path":"https://dzulfiqarfr.github.io/bpsr/reference/bps_metadata.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract dataset metadata — bps_metadata","text":"list bpsr_metadata class.","code":""},{"path":[]},{"path":"https://dzulfiqarfr.github.io/bpsr/reference/bps_metadata.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Extract dataset metadata — bps_metadata","text":"","code":"# Read the metadata of personal care and other services inflation dataset inflation <- bps_get_dataset(\"1927\", lang = \"eng\") bps_metadata(inflation) #> <bpsr_metadata> #> List of 10 #>  $ dataset_id  : chr \"1927\" #>  $ dataset     : chr \"Calender Year Inflation of Personal Care and Other Services Group and Sub (2018=100)\" #>  $ vertical_var: chr \"90 Inflation City (2018=100)\" #>  $ subject     : chr \"Consumer Prices Indices\" #>  $ methodology : NULL #>  $ activity    : NULL #>  $ note        : chr \"&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;ul&gt;&lt;li&gt;Since 2020, CPI has been based on a consumption pattern obta\"| __truncated__ #>  $ def         : chr \"\" #>  $ decimal     : chr \"2\" #>  $ var         : chr \"\"  # Read the metadata of a trade dataset trade <- bps_get_trade_hs_chapter(\"01\", \"export\") bps_metadata(trade) #> <bpsr_metadata> #> List of 7 #>  $ note      : chr \"Sumber : https://www.bps.go.id diakses pada 02-12-2022 14:35:56 WIB\" #>  $ hs_chapter: chr \"Kode dan Deskripsi dari HS\" #>  $ port      : chr \"Pelabuhan Masuk/Keluar di Indonesia\" #>  $ country   : chr \"Negara Asal/Tujuan\" #>  $ year      : chr \"Tahun Data\" #>  $ net_weight: chr \"Berat Ekspor/Impor dalam Kilogram (KG)\" #>  $ export    : chr \"Nilai Ekspor/Impor dalam US Dollar ($)\""},{"path":"https://dzulfiqarfr.github.io/bpsr/reference/bps_request.html","id":null,"dir":"Reference","previous_headings":"","what":"Perform single, multiple or paginated request to BPS API — bps_request","title":"Perform single, multiple or paginated request to BPS API — bps_request","text":"Perform single request multiple requests BPS API. bps_request() sends single request bps_request_multiple() sends multiple requests multiple query parameters one endpoint time bps_request_paginated() sends multiple requests multiple pages list endpoint","code":""},{"path":"https://dzulfiqarfr.github.io/bpsr/reference/bps_request.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Perform single, multiple or paginated request to BPS API — bps_request","text":"","code":"bps_request(url_path, ...)  bps_request_multiple(url_path, query_params)  bps_request_paginated(url_path, ..., page = 1)"},{"path":"https://dzulfiqarfr.github.io/bpsr/reference/bps_request.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Perform single, multiple or paginated request to BPS API — bps_request","text":"url_path path component URL. Must either \"domain\", \"list\", \"view\", \"dataexim\" \"interoperabilitas\". ... Name-value pairs provide query parameters. See httr2::req_url_query() details. query_params list name-value pairs provide query parameters. page page number result. Defaults page one. Set Inf request pages.","code":""},{"path":"https://dzulfiqarfr.github.io/bpsr/reference/bps_request.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Perform single, multiple or paginated request to BPS API — bps_request","text":"bps_request() returns list bpsr_response class. bps_request_multiple() bps_request_paginated() return list bpsr_multiple_responses class.","code":""},{"path":"https://dzulfiqarfr.github.io/bpsr/reference/bps_request.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Perform single, multiple or paginated request to BPS API — bps_request","text":"","code":"# Request a list of domains of every BPS bureau bps_request(\"domain\", type = \"all\") #> <bpsr_response> #> Content: #> List of 3 #>  $ status           : chr \"OK\" #>  $ data-availability: chr \"available\" #>  $ data             :List of 2 #>   ..$ :List of 3 #>   .. ..$ page : int 1 #>   .. ..$ pages: int 1 #>   .. ..$ total: int 549 #>   ..$ :'data.frame':\t549 obs. of  3 variables: #>   .. ..$ domain_id  : chr [1:549] \"0000\" ... #>   .. ..$ domain_name: chr [1:549] \"Pusat\" ... #>   .. ..$ domain_url : chr [1:549] \"http://www.bps.go.id\" ...  # Request a list of dataset subjects on each domain on different pages bps_request_multiple(   \"list\",   list(     model = \"subject\",     domain = c(\"0000\", \"1100\", \"1500\"),     page = c(1, 2, 1),     lang = \"eng\"   ) ) #> <bpsr_multiple_responses> #> Status: #> • OK: 3 #> • Error: 0 #> Data availability: #> • Available: 3 #> • Not available: 0 #> Contents: #> List of 3 #>  $ :List of 3 #>   ..$ status           : chr \"OK\" #>   ..$ data-availability: chr \"available\" #>   ..$ data             :List of 2 #>   .. ..$ :List of 5 #>   .. ..$ :'data.frame':\t10 obs. of  5 variables: #>  $ :List of 3 #>   ..$ status           : chr \"OK\" #>   ..$ data-availability: chr \"available\" #>   ..$ data             :List of 2 #>   .. ..$ :List of 5 #>   .. ..$ :'data.frame':\t10 obs. of  5 variables: #>  $ :List of 3 #>   ..$ status           : chr \"OK\" #>   ..$ data-availability: chr \"available\" #>   ..$ data             :List of 2 #>   .. ..$ :List of 5 #>   .. ..$ :'data.frame':\t10 obs. of  5 variables:  # Request the complete list of dataset subjects on the central bureau's # domain bps_request_paginated(   \"list\",   model = \"subject\",   domain = \"0000\",   lang = \"eng\",   page = Inf ) #> ℹ Performing paginated request... #> ✔ Successfully requested 5 pages. [923ms] #>  #> <bpsr_multiple_responses> #> Status: #> • OK: 5 #> • Error: 0 #> Data availability: #> • Available: 5 #> • Not available: 0 #> Contents: #> List of 5 #>  $ :List of 3 #>   ..$ status           : chr \"OK\" #>   ..$ data-availability: chr \"available\" #>   ..$ data             :List of 2 #>   .. ..$ :List of 5 #>   .. ..$ :'data.frame':\t10 obs. of  5 variables: #>  $ :List of 3 #>   ..$ status           : chr \"OK\" #>   ..$ data-availability: chr \"available\" #>   ..$ data             :List of 2 #>   .. ..$ :List of 5 #>   .. ..$ :'data.frame':\t10 obs. of  5 variables: #>  $ :List of 3 #>   ..$ status           : chr \"OK\" #>   ..$ data-availability: chr \"available\" #>   ..$ data             :List of 2 #>   .. ..$ :List of 5 #>   .. ..$ :'data.frame':\t10 obs. of  5 variables: #>  $ :List of 3 #>   ..$ status           : chr \"OK\" #>   ..$ data-availability: chr \"available\" #>   ..$ data             :List of 2 #>   .. ..$ :List of 5 #>   .. ..$ :'data.frame':\t10 obs. of  5 variables: #>  $ :List of 3 #>   ..$ status           : chr \"OK\" #>   ..$ data-availability: chr \"available\" #>   ..$ data             :List of 2 #>   .. ..$ :List of 5 #>   .. ..$ :'data.frame':\t10 obs. of  5 variables:"},{"path":"https://dzulfiqarfr.github.io/bpsr/reference/bps_sdg.html","id":null,"dir":"Reference","previous_headings":"","what":"Look up SDG dataset — bps_sdg","title":"Look up SDG dataset — bps_sdg","text":"Request table datasets related Sustainable Development Goals (SDG). table contains dataset IDs, needed request datasets using bps_get_dataset() bps_get_datasets().","code":""},{"path":"https://dzulfiqarfr.github.io/bpsr/reference/bps_sdg.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Look up SDG dataset — bps_sdg","text":"","code":"bps_sdg(goal = NULL, page = NULL, lang = c(\"ind\", \"eng\"))"},{"path":"https://dzulfiqarfr.github.io/bpsr/reference/bps_sdg.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Look up SDG dataset — bps_sdg","text":"goal goal number. page page number result. Defaults page one. Set Inf request pages. lang result's language. Must either \"ind\" Indonesian \"eng\" English. Defaults Indonesian.","code":""},{"path":"https://dzulfiqarfr.github.io/bpsr/reference/bps_sdg.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Look up SDG dataset — bps_sdg","text":"tibble containing dataset IDs titles, among things.","code":""},{"path":"https://dzulfiqarfr.github.io/bpsr/reference/bps_sdg.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Look up SDG dataset — bps_sdg","text":"","code":"# Get a list of some datasets related to goal number one bps_sdg(goal = 1, lang = \"eng\") #> # A tibble: 10 × 12 #>    sdg_goal sdg_goal_…¹ sdg_id datas…² title subje…³ subject def   notes verti…⁴ #>    <chr>    <chr>       <chr>  <chr>   <chr> <chr>   <chr>   <chr> <chr> <chr>   #>  1 sdgs_1   1. No Pove… 10.1.… 1238    Perc… 153     Geogra… NA    &lt;… 333     #>  2 sdgs_1   1. No Pove… 1.2.1* 192     Perc… 23      Povert… NA    Data… 1       #>  3 sdgs_1   1. No Pove… 1.2.1* 1539    Perc… 23      Povert… NA    &lt;… 396     #>  4 sdgs_1   1. No Pove… 1.2.1* 1538    Perc… 23      Povert… NA    &lt;… 217     #>  5 sdgs_1   1. No Pove… 1.2.1* 184     Perc… 23      Povert… NA    &lt;… 99      #>  6 sdgs_1   1. No Pove… 1.4.1  2016    Prop… 12      Popula… NA    NA    1       #>  7 sdgs_1   1. No Pove… 1.4.1  2017    Prop… 12      Popula… NA    NA    310     #>  8 sdgs_1   1. No Pove… 1.4.2  2020    Prop… 29      Housing NA    &lt;… 301     #>  9 sdgs_1   1. No Pove… 1.4.2  2019    Prop… 29      Housing NA    &lt;… 310     #> 10 sdgs_1   1. No Pove… 1.4.2  2018    Prop… 29      Housing NA    &lt;… 1       #> # … with 2 more variables: unit <chr>, graph <int>, and abbreviated variable #> #   names ¹​sdg_goal_name, ²​dataset_id, ³​subject_id, ⁴​vertical_var_group_id"},{"path":"https://dzulfiqarfr.github.io/bpsr/reference/bps_search.html","id":null,"dir":"Reference","previous_headings":"","what":"Find resource on list endpoint — bps_search","title":"Find resource on list endpoint — bps_search","text":"Search resources list endpoint, press releases, news publications.","code":""},{"path":"https://dzulfiqarfr.github.io/bpsr/reference/bps_search.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Find resource on list endpoint — bps_search","text":"","code":"bps_search(   model,   ...,   keyword = NULL,   domain_id = \"0000\",   page = NULL,   lang = c(\"ind\", \"eng\") )"},{"path":"https://dzulfiqarfr.github.io/bpsr/reference/bps_search.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Find resource on list endpoint — bps_search","text":"model result model, e.g. \"publication\" request list publications. See Model section details. ... Name-value pairs provide query parameters. See httr2::req_url_query() details. keyword keyword filter search result. domain_id domain ID BPS bureau. Defaults \"0000\", domain ID central bureau. Use bps_domain() see list domain IDs. page page number result. Defaults page one. Set Inf request pages. lang result's language. Must either \"ind\" Indonesian \"eng\" English. Defaults Indonesian.","code":""},{"path":"https://dzulfiqarfr.github.io/bpsr/reference/bps_search.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Find resource on list endpoint — bps_search","text":"tibble.","code":""},{"path":"https://dzulfiqarfr.github.io/bpsr/reference/bps_search.html","id":"model","dir":"Reference","previous_headings":"","what":"Model","title":"Find resource on list endpoint — bps_search","text":"model must one following: \"statictable\"; \"pressrelease\"; \"publication\"; \"infographic\"; \"news\".","code":""},{"path":"https://dzulfiqarfr.github.io/bpsr/reference/bps_search.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Find resource on list endpoint — bps_search","text":"","code":"bps_search(\"news\", keyword = \"inflation\", lang = \"eng\") #> # A tibble: 8 × 6 #>   news_id newscat_id        newscat_name     title                 news  relea…¹ #>   <chr>   <chr>             <chr>            <chr>                 <chr> <chr>   #> 1 508     Statistik Lain    OTHER ACTIVITIES March 2022 Highest I… \"<p>… 2022-0… #> 2 356     Sensus dan Survey BPS ACTIVITIES   Changes in the CPI a… \"\\\"E… 2020-0… #> 3 349     Statistik Lain    OTHER ACTIVITIES DPR RDP: BPS Reports… \"Jak… 2019-1… #> 4 282     Statistik Lain    OTHER ACTIVITIES Education on Susenas… \"Jak… 2019-0… #> 5 250     Statistik Lain    OTHER ACTIVITIES The FMS National Sym… \"Jak… 2018-1… #> 6 237     Sensus dan Survey BPS ACTIVITIES   NTP, Measured Farmer… \"Bal… 2018-1… #> 7 204     Sensus dan Survey BPS ACTIVITIES   Role Playing Holtiku… \"\\\"F… 2018-0… #> 8 94      Statistik Lain    OTHER ACTIVITIES Chairul Tanjung’s Ap… \"The… 2014-0… #> # … with abbreviated variable name ¹​released"},{"path":"https://dzulfiqarfr.github.io/bpsr/reference/bps_set_key.html","id":null,"dir":"Reference","previous_headings":"","what":"Set BPS API key — bps_set_key","title":"Set BPS API key — bps_set_key","text":"Provide API key bpsr storing environment variable called BPSR_KEY.","code":""},{"path":"https://dzulfiqarfr.github.io/bpsr/reference/bps_set_key.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Set BPS API key — bps_set_key","text":"","code":"bps_set_key(key = NULL)"},{"path":"https://dzulfiqarfr.github.io/bpsr/reference/bps_set_key.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Set BPS API key — bps_set_key","text":"key API key. Defaults NULL, prompts user add using dialog box.","code":""},{"path":"https://dzulfiqarfr.github.io/bpsr/reference/bps_set_key.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Set BPS API key — bps_set_key","text":"","code":"if (FALSE) { bps_set_key() }"},{"path":"https://dzulfiqarfr.github.io/bpsr/reference/bps_subject_category.html","id":null,"dir":"Reference","previous_headings":"","what":"Look up subject category and subject of dataset — bps_subject_category","title":"Look up subject category and subject of dataset — bps_subject_category","text":"Get tables dataset subject category subject. subject table contains subject IDs, useful request specific records dataset table using bps_dataset(). bps_subject_category() requests subject category table bps_subject() requests subject table","code":""},{"path":"https://dzulfiqarfr.github.io/bpsr/reference/bps_subject_category.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Look up subject category and subject of dataset — bps_subject_category","text":"","code":"bps_subject_category(domain_id = \"0000\", page = NULL, lang = c(\"ind\", \"eng\"))  bps_subject(   subject_category_id = NULL,   domain_id = \"0000\",   page = NULL,   lang = c(\"ind\", \"eng\") )"},{"path":"https://dzulfiqarfr.github.io/bpsr/reference/bps_subject_category.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Look up subject category and subject of dataset — bps_subject_category","text":"domain_id domain ID BPS bureau. Defaults \"0000\", domain ID central bureau. Use bps_domain() see list domain IDs. page page number result. Defaults page one. Set Inf request pages. lang result's language. Must either \"ind\" Indonesian \"eng\" English. Defaults Indonesian. subject_category_id subject category ID. Use bps_subject_category() see list subject category IDs.","code":""},{"path":"https://dzulfiqarfr.github.io/bpsr/reference/bps_subject_category.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Look up subject category and subject of dataset — bps_subject_category","text":"bps_subject_category() returns tibble containing subject category IDs titles. bps_subject() returns tibble containing subject IDs titles, well subject categories.","code":""},{"path":"https://dzulfiqarfr.github.io/bpsr/reference/bps_subject_category.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Look up subject category and subject of dataset — bps_subject_category","text":"","code":"# Look up the subject category bps_subject_category(lang = \"eng\") #> # A tibble: 4 × 2 #>   subject_category_id title                  #>   <chr>               <chr>                  #> 1 0                   Other                  #> 2 1                   Social and Population  #> 3 2                   Economic and Trade     #> 4 3                   Agriculture and Mining  # Look up the subjects in the economic and trade category bps_subject(subject_category_id = \"2\", lang = \"eng\") #> # A tibble: 10 × 5 #>    subject_id title                                subject_cate…¹ subje…² ntabel #>    <chr>      <chr>                                <chr>          <chr>   <lgl>  #>  1 25         Business & Consumer Tendency Index   2              Econom… NA     #>  2 2          Communication                        2              Econom… NA     #>  3 4          Construction                         2              Econom… NA     #>  4 3          Consumer Prices Indices              2              Econom… NA     #>  5 173        Domestic Trade                       2              Econom… NA     #>  6 7          Energy                               2              Econom… NA     #>  7 22         Farmer Terms of Trade                2              Econom… NA     #>  8 100        Flow of Funds                        2              Econom… NA     #>  9 8          Foreign Trade                        2              Econom… NA     #> 10 169        Gross Domestic Product (Expenditure) 2              Econom… NA     #> # … with abbreviated variable names ¹​subject_category_id, ²​subject_category"},{"path":"https://dzulfiqarfr.github.io/bpsr/reference/bps_vertical_var.html","id":null,"dir":"Reference","previous_headings":"","what":"Look up dataset variable — bps_vertical_var","title":"Look up dataset variable — bps_vertical_var","text":"Get tables dataset variables. table contains variable IDs, useful request specific observations dataset using bps_get_dataset(). bps_vertical_var() requests vertical variable table bps_derived_var() requests derived variable table bps_year() requests year table bps_period() requests period table","code":""},{"path":"https://dzulfiqarfr.github.io/bpsr/reference/bps_vertical_var.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Look up dataset variable — bps_vertical_var","text":"","code":"bps_vertical_var(   dataset_id = NULL,   domain_id = \"0000\",   page = NULL,   lang = c(\"ind\", \"eng\") )  bps_derived_var(   dataset_id = NULL,   derived_var_group_id = NULL,   domain_id = \"0000\",   page = NULL,   lang = c(\"ind\", \"eng\") )  bps_year(   dataset_id = NULL,   domain_id = \"0000\",   page = NULL,   lang = c(\"ind\", \"eng\") )  bps_period(   dataset_id = NULL,   domain_id = \"0000\",   page = NULL,   lang = c(\"ind\", \"eng\") )"},{"path":"https://dzulfiqarfr.github.io/bpsr/reference/bps_vertical_var.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Look up dataset variable — bps_vertical_var","text":"dataset_id dataset ID. Use bps_dataset() see list dataset IDs. domain_id domain ID BPS bureau. Defaults \"0000\", domain ID central bureau. Use bps_domain() see list domain IDs. page page number result. Defaults page one. Set Inf request pages. lang result's language. Must either \"ind\" Indonesian \"eng\" English. Defaults Indonesian. derived_var_group_id derived variable group ID. Use bps_derived_var() see list derived variable group IDs.","code":""},{"path":"https://dzulfiqarfr.github.io/bpsr/reference/bps_vertical_var.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Look up dataset variable — bps_vertical_var","text":"bps_vertical_var() returns tibble containing vertical variable IDs, names groups. bps_derived_var() returns tibble containing derived variable IDs, names groups. bps_year() returns tibble containing year IDs years. bps_period() returns tibble containing period IDs periods.","code":""},{"path":"https://dzulfiqarfr.github.io/bpsr/reference/bps_vertical_var.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Look up dataset variable — bps_vertical_var","text":"","code":"# Look up the vertical variables in the gross domestic product dataset bps_vertical_var(dataset_id = \"1955\", lang = \"eng\") #> # A tibble: 10 × 5 #>    vertical_var_id vertical_var                          verti…¹ verti…² verti…³ #>    <chr>           <chr>                                 <chr>   <chr>   <chr>   #>  1 100             1. Household Consumption Expenditures 1630    91      GDP by… #>  2 110             a. Food and Beverages, Other Than Re… 1631    91      GDP by… #>  3 120             b. Clothing, Footwear and Maintenanc… 1632    91      GDP by… #>  4 130             c. Household Housing and Equipment    1633    91      GDP by… #>  5 140             d. Health and Education               1634    91      GDP by… #>  6 150             e. Transportation and Communication   1635    91      GDP by… #>  7 160             f. Restaurants and Hotels             1636    91      GDP by… #>  8 170             g. Others                             1637    91      GDP by… #>  9 200             2. Consumption Expenditures of Non-P… 1638    91      GDP by… #> 10 300             3. Government Consumption Expenditur… 1639    91      GDP by… #> # … with abbreviated variable names ¹​vertical_var_item_id, #> #   ²​vertical_var_group_id, ³​vertical_var_group"},{"path":"https://dzulfiqarfr.github.io/bpsr/reference/bps_view.html","id":null,"dir":"Reference","previous_headings":"","what":"Perform request to view endpoint — bps_view","title":"Perform request to view endpoint — bps_view","text":"low-level function send request view endpoint.","code":""},{"path":"https://dzulfiqarfr.github.io/bpsr/reference/bps_view.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Perform request to view endpoint — bps_view","text":"","code":"bps_view(model, id, ..., lang = c(\"ind\", \"eng\"))"},{"path":"https://dzulfiqarfr.github.io/bpsr/reference/bps_view.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Perform request to view endpoint — bps_view","text":"model result model, e.g. \"publication\" view details particular publication. See Model section details. id ID, e.g. publication ID. ... Name-value pairs provide query parameters. See httr2::req_url_query() details. lang result's language. Must either \"ind\" Indonesian \"eng\" English. Defaults Indonesian.","code":""},{"path":"https://dzulfiqarfr.github.io/bpsr/reference/bps_view.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Perform request to view endpoint — bps_view","text":"list bpsr_file class.","code":""},{"path":"https://dzulfiqarfr.github.io/bpsr/reference/bps_view.html","id":"model","dir":"Reference","previous_headings":"","what":"Model","title":"Perform request to view endpoint — bps_view","text":"model must one following: \"glosarium\"; \"news\"; \"pressrelease\"; \"publication\"; \"statictable\"; \"tablestatistic\"; \"kbli2009\"; \"kbli2015\"; \"kbli2017\"; \"kbli2020\"; \"kbki2015\".","code":""},{"path":[]},{"path":"https://dzulfiqarfr.github.io/bpsr/reference/bps_view.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Perform request to view endpoint — bps_view","text":"","code":"# Get information and the download URL of a spreadsheet dataset on annual # inflation bps_view(\"statictable\", \"915\", lang = \"eng\") #> <bpsr_file> #> List of 8 #>  $ table_id: int 915 #>  $ sub_id  : int 3 #>  $ title   : chr \"Composite Inflation Rate of Year on Year of 90 Cities <sup>1<\/sup> (2018=100)\" #>  $ table   : chr \"&lt;html xmlns:o=&quot;urn:schemas-microsoft-com:office:office&quot;\\r\\nxmlns:x=&quot;urn:schemas-microsoft-com\"| __truncated__ #>  $ cr_date : chr \"2014-09-26 00:00:00\" #>  $ up_date : chr \"2022-12-01 11:44:44\" #>  $ excel   : chr \"https://www.bps.go.id/statictable/downloadapi.html?data=MomSOzd026G9w2qip95REXjnvBfghZU7Qk0v%2BXLuRflVewuTZBkOc\"| __truncated__ #>  $ size    : chr \"0.04 MB\""}]
